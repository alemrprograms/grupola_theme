{
  "{\"sourceRoot\":\"C:\\\\xampp\\\\htdocs\\\\grupola\\\\wp-content\\\\themes\\\\grupo_la\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\xampp\\\\htdocs\\\\grupola\\\\wp-content\\\\themes\\\\grupo_la\",\"filename\":\"C:\\\\xampp\\\\htdocs\\\\grupola\\\\wp-content\\\\themes\\\\grupo_la\\\\gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\xampp\\\\htdocs\\\\grupola\\\\wp-content\\\\themes\\\\grupo_la\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\xampp\\htdocs\\grupola\\wp-content\\themes\\grupo_la",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\xampp\\htdocs\\grupola\\wp-content\\themes\\grupo_la",
      "filename": "C:\\xampp\\htdocs\\grupola\\wp-content\\themes\\grupo_la\\gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\xampp\\htdocs\\grupola\\wp-content\\themes\\grupo_la",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\xampp\\htdocs\\grupola\\wp-content\\themes\\grupo_la\\gulpfile.babel.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\xampp\\htdocs\\grupola\\wp-content\\themes\\grupo_la\\gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\xampp\\htdocs\\grupola\\wp-content\\themes\\grupo_la",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.build = exports.dev = exports.reload = exports.serve = exports.watchForChanges = exports.clean = exports.copy = exports.images = exports.styles = exports.concat_js = void 0;\n\nvar _gulp = require(\"gulp\");\n\nvar _yargs = _interopRequireDefault(require(\"yargs\"));\n\nvar _gulpSass = _interopRequireDefault(require(\"gulp-sass\"));\n\nvar _gulpCleanCss = _interopRequireDefault(require(\"gulp-clean-css\"));\n\nvar _gulpIf = _interopRequireDefault(require(\"gulp-if\"));\n\nvar _gulpPostcss = _interopRequireDefault(require(\"gulp-postcss\"));\n\nvar _gulpSourcemaps = _interopRequireDefault(require(\"gulp-sourcemaps\"));\n\nvar _autoprefixer = _interopRequireDefault(require(\"autoprefixer\"));\n\nvar _gulpImagemin = _interopRequireDefault(require(\"gulp-imagemin\"));\n\nvar _del = _interopRequireDefault(require(\"del\"));\n\nvar _webpackStream = _interopRequireDefault(require(\"webpack-stream\"));\n\nvar _vinylNamed = _interopRequireDefault(require(\"vinyl-named\"));\n\nvar _browserSync = _interopRequireDefault(require(\"browser-sync\"));\n\nvar _gulpConcat = _interopRequireDefault(require(\"gulp-concat\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar PRODUCTION = _yargs[\"default\"].argv.prod;\n\nvar concat_js = function concat_js() {\n  return (0, _gulp.src)(['./src/js/jquery.min.js', './src/js/jquery.easing.min.js', './src/js/bootstrap.bundle.min.js', './src/js/jqBootstrapValidation.js', './src/js/contact_me.js', './src/js/grupo_la.js']).pipe((0, _gulpConcat[\"default\"])('grupo_la.js')).pipe((0, _gulp.dest)('./dist/js'));\n};\n\nexports.concat_js = concat_js;\n\nvar styles = function styles() {\n  return (0, _gulp.src)(['src/sass/style.scss']).pipe((0, _gulpIf[\"default\"])(!PRODUCTION, _gulpSourcemaps[\"default\"].init())).pipe((0, _gulpSass[\"default\"])().on('error', _gulpSass[\"default\"].logError)).pipe((0, _gulpIf[\"default\"])(PRODUCTION, (0, _gulpPostcss[\"default\"])([(0, _autoprefixer[\"default\"])()]))).pipe((0, _gulpIf[\"default\"])(PRODUCTION, (0, _gulpCleanCss[\"default\"])({\n    compatibility: 'ie8'\n  }))).pipe((0, _gulpIf[\"default\"])(!PRODUCTION, _gulpSourcemaps[\"default\"].write())).pipe((0, _gulp.dest)('dist/css'));\n};\n\nexports.styles = styles;\n\nvar images = function images() {\n  return (0, _gulp.src)('src/images/**/*.{jpg,jpeg,png,svg,gif}').pipe((0, _gulpIf[\"default\"])(PRODUCTION, (0, _gulpImagemin[\"default\"])())).pipe((0, _gulp.dest)('dist/images'));\n};\n\nexports.images = images;\n\nvar copy = function copy() {\n  return (0, _gulp.src)(['src/**/*', '!src/{images,js,sass,vendor,mail}', '!src/{images,js,sass,vendor,mail}/**/*']).pipe((0, _gulp.dest)('dist'));\n};\n\nexports.copy = copy;\n\nvar clean = function clean() {\n  return (0, _del[\"default\"])(['dist']);\n};\n\nexports.clean = clean;\n\nvar watchForChanges = function watchForChanges() {\n  (0, _gulp.watch)('src/sass/**/*.scss', (0, _gulp.series)(styles, reload));\n  (0, _gulp.watch)('src/images/**/*.{jpg,jpeg,png,svg,gif}', (0, _gulp.series)(images, reload));\n  (0, _gulp.watch)(['src/**/*', '!src/{images,js,sass,vendor,mail}', '!src/{images,js,sass,vendor,mail}/**/*'], (0, _gulp.series)(copy, reload));\n  (0, _gulp.watch)('src/js/**/*.js', (0, _gulp.series)(concat_js, reload));\n  (0, _gulp.watch)(\"**/*.php\", reload);\n};\n\nexports.watchForChanges = watchForChanges;\n\nvar server = _browserSync[\"default\"].create();\n\nvar serve = function serve(done) {\n  server.init({\n    proxy: \"http://localhost/grupola/\" // put your local website link here\n\n  });\n  done();\n};\n\nexports.serve = serve;\n\nvar reload = function reload(done) {\n  server.reload();\n  done();\n};\n\nexports.reload = reload;\nvar dev = (0, _gulp.series)(clean, (0, _gulp.parallel)(styles, images, copy, concat_js), serve, watchForChanges);\nexports.dev = dev;\nvar build = (0, _gulp.series)(clean, (0, _gulp.parallel)(styles, images, copy, concat_js));\nexports.build = build;\nvar _default = dev;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbIlBST0RVQ1RJT04iLCJ5YXJncyIsImFyZ3YiLCJwcm9kIiwiY29uY2F0X2pzIiwicGlwZSIsInN0eWxlcyIsInNvdXJjZW1hcHMiLCJpbml0Iiwib24iLCJzYXNzIiwibG9nRXJyb3IiLCJjb21wYXRpYmlsaXR5Iiwid3JpdGUiLCJpbWFnZXMiLCJjb3B5IiwiY2xlYW4iLCJ3YXRjaEZvckNoYW5nZXMiLCJyZWxvYWQiLCJzZXJ2ZXIiLCJicm93c2VyU3luYyIsImNyZWF0ZSIsInNlcnZlIiwiZG9uZSIsInByb3h5IiwiZGV2IiwiYnVpbGQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBLElBQU1BLFVBQVUsR0FBR0Msa0JBQU1DLElBQU4sQ0FBV0MsSUFBOUI7O0FBR08sSUFBTUMsU0FBUyxHQUFHLFNBQVpBLFNBQVksR0FBTTtBQUM3QixTQUFPLGVBQUksQ0FDTCx3QkFESyxFQUVMLCtCQUZLLEVBR0wsa0NBSEssRUFJTCxtQ0FKSyxFQUtMLHdCQUxLLEVBTUwsc0JBTkssQ0FBSixFQVFGQyxJQVJFLENBUUcsNEJBQU8sYUFBUCxDQVJILEVBU0ZBLElBVEUsQ0FTRyxnQkFBSyxXQUFMLENBVEgsQ0FBUDtBQVVELENBWE07Ozs7QUFhQSxJQUFNQyxNQUFNLEdBQUcsU0FBVEEsTUFBUyxHQUFNO0FBQzFCLFNBQU8sZUFBSSxDQUFDLHFCQUFELENBQUosRUFDSkQsSUFESSxDQUNDLHdCQUFPLENBQUNMLFVBQVIsRUFBb0JPLDJCQUFXQyxJQUFYLEVBQXBCLENBREQsRUFFSkgsSUFGSSxDQUVDLDRCQUFPSSxFQUFQLENBQVUsT0FBVixFQUFtQkMscUJBQUtDLFFBQXhCLENBRkQsRUFHSk4sSUFISSxDQUdDLHdCQUFPTCxVQUFQLEVBQW1CLDZCQUFRLENBQUMsK0JBQUQsQ0FBUixDQUFuQixDQUhELEVBSUpLLElBSkksQ0FJQyx3QkFBT0wsVUFBUCxFQUFtQiw4QkFBUztBQUFDWSxJQUFBQSxhQUFhLEVBQUM7QUFBZixHQUFULENBQW5CLENBSkQsRUFLSlAsSUFMSSxDQUtDLHdCQUFPLENBQUNMLFVBQVIsRUFBb0JPLDJCQUFXTSxLQUFYLEVBQXBCLENBTEQsRUFNSlIsSUFOSSxDQU1DLGdCQUFLLFVBQUwsQ0FORCxDQUFQO0FBT0QsQ0FSTTs7OztBQVVBLElBQU1TLE1BQU0sR0FBRyxTQUFUQSxNQUFTLEdBQU07QUFDMUIsU0FBTyxlQUFJLHdDQUFKLEVBQ0pULElBREksQ0FDQyx3QkFBT0wsVUFBUCxFQUFtQiwrQkFBbkIsQ0FERCxFQUVKSyxJQUZJLENBRUMsZ0JBQUssYUFBTCxDQUZELENBQVA7QUFHRCxDQUpNOzs7O0FBTUEsSUFBTVUsSUFBSSxHQUFHLFNBQVBBLElBQU8sR0FBTTtBQUN4QixTQUFPLGVBQUksQ0FBQyxVQUFELEVBQVksbUNBQVosRUFBZ0Qsd0NBQWhELENBQUosRUFDSlYsSUFESSxDQUNDLGdCQUFLLE1BQUwsQ0FERCxDQUFQO0FBRUQsQ0FITTs7OztBQUtBLElBQU1XLEtBQUssR0FBRyxTQUFSQSxLQUFRO0FBQUEsU0FBTSxxQkFBSSxDQUFDLE1BQUQsQ0FBSixDQUFOO0FBQUEsQ0FBZDs7OztBQUVBLElBQU1DLGVBQWUsR0FBRyxTQUFsQkEsZUFBa0IsR0FBTTtBQUNuQyxtQkFBTSxvQkFBTixFQUE0QixrQkFBT1gsTUFBUCxFQUFlWSxNQUFmLENBQTVCO0FBQ0EsbUJBQU0sd0NBQU4sRUFBZ0Qsa0JBQU9KLE1BQVAsRUFBZUksTUFBZixDQUFoRDtBQUNBLG1CQUFNLENBQUMsVUFBRCxFQUFZLG1DQUFaLEVBQWdELHdDQUFoRCxDQUFOLEVBQWlHLGtCQUFPSCxJQUFQLEVBQWFHLE1BQWIsQ0FBakc7QUFDQSxtQkFBTSxnQkFBTixFQUF3QixrQkFBT2QsU0FBUCxFQUFrQmMsTUFBbEIsQ0FBeEI7QUFDQSxtQkFBTSxVQUFOLEVBQWtCQSxNQUFsQjtBQUNELENBTk07Ozs7QUFRUCxJQUFNQyxNQUFNLEdBQUdDLHdCQUFZQyxNQUFaLEVBQWY7O0FBQ08sSUFBTUMsS0FBSyxHQUFHLFNBQVJBLEtBQVEsQ0FBQUMsSUFBSSxFQUFJO0FBQzNCSixFQUFBQSxNQUFNLENBQUNYLElBQVAsQ0FBWTtBQUNWZ0IsSUFBQUEsS0FBSyxFQUFFLDJCQURHLENBQ3lCOztBQUR6QixHQUFaO0FBR0FELEVBQUFBLElBQUk7QUFDTCxDQUxNOzs7O0FBTUEsSUFBTUwsTUFBTSxHQUFHLFNBQVRBLE1BQVMsQ0FBQUssSUFBSSxFQUFJO0FBQzVCSixFQUFBQSxNQUFNLENBQUNELE1BQVA7QUFDQUssRUFBQUEsSUFBSTtBQUNMLENBSE07OztBQUtBLElBQU1FLEdBQUcsR0FBRyxrQkFBT1QsS0FBUCxFQUFjLG9CQUFTVixNQUFULEVBQWlCUSxNQUFqQixFQUF5QkMsSUFBekIsRUFBK0JYLFNBQS9CLENBQWQsRUFBeURrQixLQUF6RCxFQUFnRUwsZUFBaEUsQ0FBWjs7QUFDQSxJQUFNUyxLQUFLLEdBQUcsa0JBQU9WLEtBQVAsRUFBYyxvQkFBU1YsTUFBVCxFQUFpQlEsTUFBakIsRUFBeUJDLElBQXpCLEVBQStCWCxTQUEvQixDQUFkLENBQWQ7O2VBQ1FxQixHIiwic291cmNlUm9vdCI6IkM6XFx4YW1wcFxcaHRkb2NzXFxncnVwb2xhXFx3cC1jb250ZW50XFx0aGVtZXNcXGdydXBvX2xhIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3JjLCBkZXN0LCB3YXRjaCwgc2VyaWVzLCBwYXJhbGxlbCAgfSBmcm9tICdndWxwJztcbmltcG9ydCB5YXJncyBmcm9tICd5YXJncyc7XG5pbXBvcnQgc2FzcyBmcm9tICdndWxwLXNhc3MnO1xuaW1wb3J0IGNsZWFuQ3NzIGZyb20gJ2d1bHAtY2xlYW4tY3NzJztcbmltcG9ydCBndWxwaWYgZnJvbSAnZ3VscC1pZic7XG5pbXBvcnQgcG9zdGNzcyBmcm9tICdndWxwLXBvc3Rjc3MnO1xuaW1wb3J0IHNvdXJjZW1hcHMgZnJvbSAnZ3VscC1zb3VyY2VtYXBzJztcbmltcG9ydCBhdXRvcHJlZml4ZXIgZnJvbSAnYXV0b3ByZWZpeGVyJztcbmltcG9ydCBpbWFnZW1pbiBmcm9tICdndWxwLWltYWdlbWluJztcbmltcG9ydCBkZWwgZnJvbSAnZGVsJztcbmltcG9ydCB3ZWJwYWNrIGZyb20gJ3dlYnBhY2stc3RyZWFtJztcbmltcG9ydCBuYW1lZCBmcm9tICd2aW55bC1uYW1lZCc7XG5pbXBvcnQgYnJvd3NlclN5bmMgZnJvbSBcImJyb3dzZXItc3luY1wiO1xuaW1wb3J0IGNvbmNhdCBmcm9tIFwiZ3VscC1jb25jYXRcIjtcblxuY29uc3QgUFJPRFVDVElPTiA9IHlhcmdzLmFyZ3YucHJvZDtcblxuXG5leHBvcnQgY29uc3QgY29uY2F0X2pzID0gKCkgPT4ge1xuICByZXR1cm4gc3JjKFtcbiAgICAgICAgJy4vc3JjL2pzL2pxdWVyeS5taW4uanMnLFxuICAgICAgICAnLi9zcmMvanMvanF1ZXJ5LmVhc2luZy5taW4uanMnLFxuICAgICAgICAnLi9zcmMvanMvYm9vdHN0cmFwLmJ1bmRsZS5taW4uanMnLFxuICAgICAgICAnLi9zcmMvanMvanFCb290c3RyYXBWYWxpZGF0aW9uLmpzJyxcbiAgICAgICAgJy4vc3JjL2pzL2NvbnRhY3RfbWUuanMnLFxuICAgICAgICAnLi9zcmMvanMvZ3J1cG9fbGEuanMnXG4gICAgICBdKVxuICAgICAgLnBpcGUoY29uY2F0KCdncnVwb19sYS5qcycpKVxuICAgICAgLnBpcGUoZGVzdCgnLi9kaXN0L2pzJykpO1xufVxuXG5leHBvcnQgY29uc3Qgc3R5bGVzID0gKCkgPT4ge1xuICByZXR1cm4gc3JjKFsnc3JjL3Nhc3Mvc3R5bGUuc2NzcyddKVxuICAgIC5waXBlKGd1bHBpZighUFJPRFVDVElPTiwgc291cmNlbWFwcy5pbml0KCkpKVxuICAgIC5waXBlKHNhc3MoKS5vbignZXJyb3InLCBzYXNzLmxvZ0Vycm9yKSlcbiAgICAucGlwZShndWxwaWYoUFJPRFVDVElPTiwgcG9zdGNzcyhbYXV0b3ByZWZpeGVyKCldKSkpXG4gICAgLnBpcGUoZ3VscGlmKFBST0RVQ1RJT04sIGNsZWFuQ3NzKHtjb21wYXRpYmlsaXR5OidpZTgnfSkpKVxuICAgIC5waXBlKGd1bHBpZighUFJPRFVDVElPTiwgc291cmNlbWFwcy53cml0ZSgpKSlcbiAgICAucGlwZShkZXN0KCdkaXN0L2NzcycpKTtcbn1cblxuZXhwb3J0IGNvbnN0IGltYWdlcyA9ICgpID0+IHtcbiAgcmV0dXJuIHNyYygnc3JjL2ltYWdlcy8qKi8qLntqcGcsanBlZyxwbmcsc3ZnLGdpZn0nKVxuICAgIC5waXBlKGd1bHBpZihQUk9EVUNUSU9OLCBpbWFnZW1pbigpKSlcbiAgICAucGlwZShkZXN0KCdkaXN0L2ltYWdlcycpKTtcbn1cblxuZXhwb3J0IGNvbnN0IGNvcHkgPSAoKSA9PiB7XG4gIHJldHVybiBzcmMoWydzcmMvKiovKicsJyFzcmMve2ltYWdlcyxqcyxzYXNzLHZlbmRvcixtYWlsfScsJyFzcmMve2ltYWdlcyxqcyxzYXNzLHZlbmRvcixtYWlsfS8qKi8qJ10pXG4gICAgLnBpcGUoZGVzdCgnZGlzdCcpKTtcbn1cblxuZXhwb3J0IGNvbnN0IGNsZWFuID0gKCkgPT4gZGVsKFsnZGlzdCddKTtcblxuZXhwb3J0IGNvbnN0IHdhdGNoRm9yQ2hhbmdlcyA9ICgpID0+IHtcbiAgd2F0Y2goJ3NyYy9zYXNzLyoqLyouc2NzcycsIHNlcmllcyhzdHlsZXMsIHJlbG9hZCkpO1xuICB3YXRjaCgnc3JjL2ltYWdlcy8qKi8qLntqcGcsanBlZyxwbmcsc3ZnLGdpZn0nLCBzZXJpZXMoaW1hZ2VzLCByZWxvYWQpKTtcbiAgd2F0Y2goWydzcmMvKiovKicsJyFzcmMve2ltYWdlcyxqcyxzYXNzLHZlbmRvcixtYWlsfScsJyFzcmMve2ltYWdlcyxqcyxzYXNzLHZlbmRvcixtYWlsfS8qKi8qJ10sIHNlcmllcyhjb3B5LCByZWxvYWQpKTtcbiAgd2F0Y2goJ3NyYy9qcy8qKi8qLmpzJywgc2VyaWVzKGNvbmNhdF9qcywgcmVsb2FkKSk7XG4gIHdhdGNoKFwiKiovKi5waHBcIiwgcmVsb2FkKTtcbn1cblxuY29uc3Qgc2VydmVyID0gYnJvd3NlclN5bmMuY3JlYXRlKCk7XG5leHBvcnQgY29uc3Qgc2VydmUgPSBkb25lID0+IHtcbiAgc2VydmVyLmluaXQoe1xuICAgIHByb3h5OiBcImh0dHA6Ly9sb2NhbGhvc3QvZ3J1cG9sYS9cIiAvLyBwdXQgeW91ciBsb2NhbCB3ZWJzaXRlIGxpbmsgaGVyZVxuICB9KTtcbiAgZG9uZSgpO1xufTtcbmV4cG9ydCBjb25zdCByZWxvYWQgPSBkb25lID0+IHtcbiAgc2VydmVyLnJlbG9hZCgpO1xuICBkb25lKCk7XG59O1xuXG5leHBvcnQgY29uc3QgZGV2ID0gc2VyaWVzKGNsZWFuLCBwYXJhbGxlbChzdHlsZXMsIGltYWdlcywgY29weSwgY29uY2F0X2pzKSwgc2VydmUsIHdhdGNoRm9yQ2hhbmdlcyk7XG5leHBvcnQgY29uc3QgYnVpbGQgPSBzZXJpZXMoY2xlYW4sIHBhcmFsbGVsKHN0eWxlcywgaW1hZ2VzLCBjb3B5LCBjb25jYXRfanMpKTtcbmV4cG9ydCBkZWZhdWx0IGRldjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "PRODUCTION",
        "yargs",
        "argv",
        "prod",
        "concat_js",
        "pipe",
        "styles",
        "sourcemaps",
        "init",
        "on",
        "sass",
        "logError",
        "compatibility",
        "write",
        "images",
        "copy",
        "clean",
        "watchForChanges",
        "reload",
        "server",
        "browserSync",
        "create",
        "serve",
        "done",
        "proxy",
        "dev",
        "build"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\xampp\\htdocs\\grupola\\wp-content\\themes\\grupo_la",
      "sourcesContent": [
        "import { src, dest, watch, series, parallel  } from 'gulp';\nimport yargs from 'yargs';\nimport sass from 'gulp-sass';\nimport cleanCss from 'gulp-clean-css';\nimport gulpif from 'gulp-if';\nimport postcss from 'gulp-postcss';\nimport sourcemaps from 'gulp-sourcemaps';\nimport autoprefixer from 'autoprefixer';\nimport imagemin from 'gulp-imagemin';\nimport del from 'del';\nimport webpack from 'webpack-stream';\nimport named from 'vinyl-named';\nimport browserSync from \"browser-sync\";\nimport concat from \"gulp-concat\";\n\nconst PRODUCTION = yargs.argv.prod;\n\n\nexport const concat_js = () => {\n  return src([\n        './src/js/jquery.min.js',\n        './src/js/jquery.easing.min.js',\n        './src/js/bootstrap.bundle.min.js',\n        './src/js/jqBootstrapValidation.js',\n        './src/js/contact_me.js',\n        './src/js/grupo_la.js'\n      ])\n      .pipe(concat('grupo_la.js'))\n      .pipe(dest('./dist/js'));\n}\n\nexport const styles = () => {\n  return src(['src/sass/style.scss'])\n    .pipe(gulpif(!PRODUCTION, sourcemaps.init()))\n    .pipe(sass().on('error', sass.logError))\n    .pipe(gulpif(PRODUCTION, postcss([autoprefixer()])))\n    .pipe(gulpif(PRODUCTION, cleanCss({compatibility:'ie8'})))\n    .pipe(gulpif(!PRODUCTION, sourcemaps.write()))\n    .pipe(dest('dist/css'));\n}\n\nexport const images = () => {\n  return src('src/images/**/*.{jpg,jpeg,png,svg,gif}')\n    .pipe(gulpif(PRODUCTION, imagemin()))\n    .pipe(dest('dist/images'));\n}\n\nexport const copy = () => {\n  return src(['src/**/*','!src/{images,js,sass,vendor,mail}','!src/{images,js,sass,vendor,mail}/**/*'])\n    .pipe(dest('dist'));\n}\n\nexport const clean = () => del(['dist']);\n\nexport const watchForChanges = () => {\n  watch('src/sass/**/*.scss', series(styles, reload));\n  watch('src/images/**/*.{jpg,jpeg,png,svg,gif}', series(images, reload));\n  watch(['src/**/*','!src/{images,js,sass,vendor,mail}','!src/{images,js,sass,vendor,mail}/**/*'], series(copy, reload));\n  watch('src/js/**/*.js', series(concat_js, reload));\n  watch(\"**/*.php\", reload);\n}\n\nconst server = browserSync.create();\nexport const serve = done => {\n  server.init({\n    proxy: \"http://localhost/grupola/\" // put your local website link here\n  });\n  done();\n};\nexport const reload = done => {\n  server.reload();\n  done();\n};\n\nexport const dev = series(clean, parallel(styles, images, copy, concat_js), serve, watchForChanges);\nexport const build = series(clean, parallel(styles, images, copy, concat_js));\nexport default dev;"
      ]
    },
    "sourceType": "script",
    "mtime": 1572608899459
  },
  "{\"sourceRoot\":\"D:\\\\_Web\\\\xampp\\\\htdocs\\\\_projetos\\\\grupola_v1\\\\wp-content\\\\themes\\\\grupo_la\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"D:\\\\_Web\\\\xampp\\\\htdocs\\\\_projetos\\\\grupola_v1\\\\wp-content\\\\themes\\\\grupo_la\",\"filename\":\"D:\\\\_Web\\\\xampp\\\\htdocs\\\\_projetos\\\\grupola_v1\\\\wp-content\\\\themes\\\\grupo_la\\\\gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\_Web\\\\xampp\\\\htdocs\\\\_projetos\\\\grupola_v1\\\\wp-content\\\\themes\\\\grupo_la\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\_Web\\xampp\\htdocs\\_projetos\\grupola_v1\\wp-content\\themes\\grupo_la",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "D:\\_Web\\xampp\\htdocs\\_projetos\\grupola_v1\\wp-content\\themes\\grupo_la",
      "filename": "D:\\_Web\\xampp\\htdocs\\_projetos\\grupola_v1\\wp-content\\themes\\grupo_la\\gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\_Web\\xampp\\htdocs\\_projetos\\grupola_v1\\wp-content\\themes\\grupo_la",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\_Web\\xampp\\htdocs\\_projetos\\grupola_v1\\wp-content\\themes\\grupo_la\\gulpfile.babel.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\_Web\\xampp\\htdocs\\_projetos\\grupola_v1\\wp-content\\themes\\grupo_la\\gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\_Web\\xampp\\htdocs\\_projetos\\grupola_v1\\wp-content\\themes\\grupo_la",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.build = exports.dev = exports.reload = exports.serve = exports.watchForChanges = exports.clean = exports.copy = exports.images = exports.styles = exports.concat_js = void 0;\n\nvar _gulp = require(\"gulp\");\n\nvar _yargs = _interopRequireDefault(require(\"yargs\"));\n\nvar _gulpSass = _interopRequireDefault(require(\"gulp-sass\"));\n\nvar _gulpCleanCss = _interopRequireDefault(require(\"gulp-clean-css\"));\n\nvar _gulpIf = _interopRequireDefault(require(\"gulp-if\"));\n\nvar _gulpPostcss = _interopRequireDefault(require(\"gulp-postcss\"));\n\nvar _gulpSourcemaps = _interopRequireDefault(require(\"gulp-sourcemaps\"));\n\nvar _autoprefixer = _interopRequireDefault(require(\"autoprefixer\"));\n\nvar _gulpImagemin = _interopRequireDefault(require(\"gulp-imagemin\"));\n\nvar _del = _interopRequireDefault(require(\"del\"));\n\nvar _webpackStream = _interopRequireDefault(require(\"webpack-stream\"));\n\nvar _vinylNamed = _interopRequireDefault(require(\"vinyl-named\"));\n\nvar _browserSync = _interopRequireDefault(require(\"browser-sync\"));\n\nvar _gulpConcat = _interopRequireDefault(require(\"gulp-concat\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar PRODUCTION = _yargs[\"default\"].argv.prod;\n\nvar concat_js = function concat_js() {\n  return (0, _gulp.src)(['./src/js/jquery.min.js', './src/js/jquery.easing.min.js', './src/js/bootstrap.bundle.min.js', './src/js/jqBootstrapValidation.js', './src/js/contact_me.js', './src/js/grupo_la.js']).pipe((0, _gulpConcat[\"default\"])('grupo_la.js')).pipe((0, _gulp.dest)('./dist/js'));\n};\n\nexports.concat_js = concat_js;\n\nvar styles = function styles() {\n  return (0, _gulp.src)(['src/sass/style.scss']).pipe((0, _gulpIf[\"default\"])(!PRODUCTION, _gulpSourcemaps[\"default\"].init())).pipe((0, _gulpSass[\"default\"])().on('error', _gulpSass[\"default\"].logError)).pipe((0, _gulpIf[\"default\"])(PRODUCTION, (0, _gulpPostcss[\"default\"])([(0, _autoprefixer[\"default\"])()]))).pipe((0, _gulpIf[\"default\"])(PRODUCTION, (0, _gulpCleanCss[\"default\"])({\n    compatibility: 'ie8'\n  }))).pipe((0, _gulpIf[\"default\"])(!PRODUCTION, _gulpSourcemaps[\"default\"].write())).pipe((0, _gulp.dest)('dist/css'));\n};\n\nexports.styles = styles;\n\nvar images = function images() {\n  return (0, _gulp.src)('src/images/**/*.{jpg,jpeg,png,svg,gif}').pipe((0, _gulpIf[\"default\"])(PRODUCTION, (0, _gulpImagemin[\"default\"])())).pipe((0, _gulp.dest)('dist/images'));\n};\n\nexports.images = images;\n\nvar copy = function copy() {\n  return (0, _gulp.src)(['src/**/*', '!src/{images,js,sass,vendor,mail}', '!src/{images,js,sass,vendor,mail}/**/*']).pipe((0, _gulp.dest)('dist'));\n};\n\nexports.copy = copy;\n\nvar clean = function clean() {\n  return (0, _del[\"default\"])(['dist']);\n};\n\nexports.clean = clean;\n\nvar watchForChanges = function watchForChanges() {\n  (0, _gulp.watch)('src/sass/**/*.scss', (0, _gulp.series)(styles, reload));\n  (0, _gulp.watch)('src/images/**/*.{jpg,jpeg,png,svg,gif}', (0, _gulp.series)(images, reload));\n  (0, _gulp.watch)(['src/**/*', '!src/{images,js,sass,vendor,mail}', '!src/{images,js,sass,vendor,mail}/**/*'], (0, _gulp.series)(copy, reload));\n  (0, _gulp.watch)('src/js/**/*.js', (0, _gulp.series)(concat_js, reload));\n  (0, _gulp.watch)(\"**/*.php\", reload);\n};\n\nexports.watchForChanges = watchForChanges;\n\nvar server = _browserSync[\"default\"].create();\n\nvar serve = function serve(done) {\n  server.init({\n    proxy: \"http://localhost/_projetos/grupola_v1/\" // put your local website link here\n\n  });\n  done();\n};\n\nexports.serve = serve;\n\nvar reload = function reload(done) {\n  server.reload();\n  done();\n};\n\nexports.reload = reload;\nvar dev = (0, _gulp.series)(clean, (0, _gulp.parallel)(styles, images, copy, concat_js), serve, watchForChanges);\nexports.dev = dev;\nvar build = (0, _gulp.series)(clean, (0, _gulp.parallel)(styles, images, copy, concat_js));\nexports.build = build;\nvar _default = dev;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbIlBST0RVQ1RJT04iLCJ5YXJncyIsImFyZ3YiLCJwcm9kIiwiY29uY2F0X2pzIiwicGlwZSIsInN0eWxlcyIsInNvdXJjZW1hcHMiLCJpbml0Iiwib24iLCJzYXNzIiwibG9nRXJyb3IiLCJjb21wYXRpYmlsaXR5Iiwid3JpdGUiLCJpbWFnZXMiLCJjb3B5IiwiY2xlYW4iLCJ3YXRjaEZvckNoYW5nZXMiLCJyZWxvYWQiLCJzZXJ2ZXIiLCJicm93c2VyU3luYyIsImNyZWF0ZSIsInNlcnZlIiwiZG9uZSIsInByb3h5IiwiZGV2IiwiYnVpbGQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBLElBQU1BLFVBQVUsR0FBR0Msa0JBQU1DLElBQU4sQ0FBV0MsSUFBOUI7O0FBR08sSUFBTUMsU0FBUyxHQUFHLFNBQVpBLFNBQVksR0FBTTtBQUM3QixTQUFPLGVBQUksQ0FDTCx3QkFESyxFQUVMLCtCQUZLLEVBR0wsa0NBSEssRUFJTCxtQ0FKSyxFQUtMLHdCQUxLLEVBTUwsc0JBTkssQ0FBSixFQVFGQyxJQVJFLENBUUcsNEJBQU8sYUFBUCxDQVJILEVBU0ZBLElBVEUsQ0FTRyxnQkFBSyxXQUFMLENBVEgsQ0FBUDtBQVVELENBWE07Ozs7QUFhQSxJQUFNQyxNQUFNLEdBQUcsU0FBVEEsTUFBUyxHQUFNO0FBQzFCLFNBQU8sZUFBSSxDQUFDLHFCQUFELENBQUosRUFDSkQsSUFESSxDQUNDLHdCQUFPLENBQUNMLFVBQVIsRUFBb0JPLDJCQUFXQyxJQUFYLEVBQXBCLENBREQsRUFFSkgsSUFGSSxDQUVDLDRCQUFPSSxFQUFQLENBQVUsT0FBVixFQUFtQkMscUJBQUtDLFFBQXhCLENBRkQsRUFHSk4sSUFISSxDQUdDLHdCQUFPTCxVQUFQLEVBQW1CLDZCQUFRLENBQUMsK0JBQUQsQ0FBUixDQUFuQixDQUhELEVBSUpLLElBSkksQ0FJQyx3QkFBT0wsVUFBUCxFQUFtQiw4QkFBUztBQUFDWSxJQUFBQSxhQUFhLEVBQUM7QUFBZixHQUFULENBQW5CLENBSkQsRUFLSlAsSUFMSSxDQUtDLHdCQUFPLENBQUNMLFVBQVIsRUFBb0JPLDJCQUFXTSxLQUFYLEVBQXBCLENBTEQsRUFNSlIsSUFOSSxDQU1DLGdCQUFLLFVBQUwsQ0FORCxDQUFQO0FBT0QsQ0FSTTs7OztBQVVBLElBQU1TLE1BQU0sR0FBRyxTQUFUQSxNQUFTLEdBQU07QUFDMUIsU0FBTyxlQUFJLHdDQUFKLEVBQ0pULElBREksQ0FDQyx3QkFBT0wsVUFBUCxFQUFtQiwrQkFBbkIsQ0FERCxFQUVKSyxJQUZJLENBRUMsZ0JBQUssYUFBTCxDQUZELENBQVA7QUFHRCxDQUpNOzs7O0FBTUEsSUFBTVUsSUFBSSxHQUFHLFNBQVBBLElBQU8sR0FBTTtBQUN4QixTQUFPLGVBQUksQ0FBQyxVQUFELEVBQVksbUNBQVosRUFBZ0Qsd0NBQWhELENBQUosRUFDSlYsSUFESSxDQUNDLGdCQUFLLE1BQUwsQ0FERCxDQUFQO0FBRUQsQ0FITTs7OztBQUtBLElBQU1XLEtBQUssR0FBRyxTQUFSQSxLQUFRO0FBQUEsU0FBTSxxQkFBSSxDQUFDLE1BQUQsQ0FBSixDQUFOO0FBQUEsQ0FBZDs7OztBQUVBLElBQU1DLGVBQWUsR0FBRyxTQUFsQkEsZUFBa0IsR0FBTTtBQUNuQyxtQkFBTSxvQkFBTixFQUE0QixrQkFBT1gsTUFBUCxFQUFlWSxNQUFmLENBQTVCO0FBQ0EsbUJBQU0sd0NBQU4sRUFBZ0Qsa0JBQU9KLE1BQVAsRUFBZUksTUFBZixDQUFoRDtBQUNBLG1CQUFNLENBQUMsVUFBRCxFQUFZLG1DQUFaLEVBQWdELHdDQUFoRCxDQUFOLEVBQWlHLGtCQUFPSCxJQUFQLEVBQWFHLE1BQWIsQ0FBakc7QUFDQSxtQkFBTSxnQkFBTixFQUF3QixrQkFBT2QsU0FBUCxFQUFrQmMsTUFBbEIsQ0FBeEI7QUFDQSxtQkFBTSxVQUFOLEVBQWtCQSxNQUFsQjtBQUNELENBTk07Ozs7QUFRUCxJQUFNQyxNQUFNLEdBQUdDLHdCQUFZQyxNQUFaLEVBQWY7O0FBQ08sSUFBTUMsS0FBSyxHQUFHLFNBQVJBLEtBQVEsQ0FBQUMsSUFBSSxFQUFJO0FBQzNCSixFQUFBQSxNQUFNLENBQUNYLElBQVAsQ0FBWTtBQUNWZ0IsSUFBQUEsS0FBSyxFQUFFLHdDQURHLENBQ3NDOztBQUR0QyxHQUFaO0FBR0FELEVBQUFBLElBQUk7QUFDTCxDQUxNOzs7O0FBTUEsSUFBTUwsTUFBTSxHQUFHLFNBQVRBLE1BQVMsQ0FBQUssSUFBSSxFQUFJO0FBQzVCSixFQUFBQSxNQUFNLENBQUNELE1BQVA7QUFDQUssRUFBQUEsSUFBSTtBQUNMLENBSE07OztBQUtBLElBQU1FLEdBQUcsR0FBRyxrQkFBT1QsS0FBUCxFQUFjLG9CQUFTVixNQUFULEVBQWlCUSxNQUFqQixFQUF5QkMsSUFBekIsRUFBK0JYLFNBQS9CLENBQWQsRUFBeURrQixLQUF6RCxFQUFnRUwsZUFBaEUsQ0FBWjs7QUFDQSxJQUFNUyxLQUFLLEdBQUcsa0JBQU9WLEtBQVAsRUFBYyxvQkFBU1YsTUFBVCxFQUFpQlEsTUFBakIsRUFBeUJDLElBQXpCLEVBQStCWCxTQUEvQixDQUFkLENBQWQ7O2VBQ1FxQixHIiwic291cmNlUm9vdCI6IkQ6XFxfV2ViXFx4YW1wcFxcaHRkb2NzXFxfcHJvamV0b3NcXGdydXBvbGFfdjFcXHdwLWNvbnRlbnRcXHRoZW1lc1xcZ3J1cG9fbGEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzcmMsIGRlc3QsIHdhdGNoLCBzZXJpZXMsIHBhcmFsbGVsICB9IGZyb20gJ2d1bHAnO1xuaW1wb3J0IHlhcmdzIGZyb20gJ3lhcmdzJztcbmltcG9ydCBzYXNzIGZyb20gJ2d1bHAtc2Fzcyc7XG5pbXBvcnQgY2xlYW5Dc3MgZnJvbSAnZ3VscC1jbGVhbi1jc3MnO1xuaW1wb3J0IGd1bHBpZiBmcm9tICdndWxwLWlmJztcbmltcG9ydCBwb3N0Y3NzIGZyb20gJ2d1bHAtcG9zdGNzcyc7XG5pbXBvcnQgc291cmNlbWFwcyBmcm9tICdndWxwLXNvdXJjZW1hcHMnO1xuaW1wb3J0IGF1dG9wcmVmaXhlciBmcm9tICdhdXRvcHJlZml4ZXInO1xuaW1wb3J0IGltYWdlbWluIGZyb20gJ2d1bHAtaW1hZ2VtaW4nO1xuaW1wb3J0IGRlbCBmcm9tICdkZWwnO1xuaW1wb3J0IHdlYnBhY2sgZnJvbSAnd2VicGFjay1zdHJlYW0nO1xuaW1wb3J0IG5hbWVkIGZyb20gJ3ZpbnlsLW5hbWVkJztcbmltcG9ydCBicm93c2VyU3luYyBmcm9tIFwiYnJvd3Nlci1zeW5jXCI7XG5pbXBvcnQgY29uY2F0IGZyb20gXCJndWxwLWNvbmNhdFwiO1xuXG5jb25zdCBQUk9EVUNUSU9OID0geWFyZ3MuYXJndi5wcm9kO1xuXG5cbmV4cG9ydCBjb25zdCBjb25jYXRfanMgPSAoKSA9PiB7XG4gIHJldHVybiBzcmMoW1xuICAgICAgICAnLi9zcmMvanMvanF1ZXJ5Lm1pbi5qcycsXG4gICAgICAgICcuL3NyYy9qcy9qcXVlcnkuZWFzaW5nLm1pbi5qcycsXG4gICAgICAgICcuL3NyYy9qcy9ib290c3RyYXAuYnVuZGxlLm1pbi5qcycsXG4gICAgICAgICcuL3NyYy9qcy9qcUJvb3RzdHJhcFZhbGlkYXRpb24uanMnLFxuICAgICAgICAnLi9zcmMvanMvY29udGFjdF9tZS5qcycsXG4gICAgICAgICcuL3NyYy9qcy9ncnVwb19sYS5qcydcbiAgICAgIF0pXG4gICAgICAucGlwZShjb25jYXQoJ2dydXBvX2xhLmpzJykpXG4gICAgICAucGlwZShkZXN0KCcuL2Rpc3QvanMnKSk7XG59XG5cbmV4cG9ydCBjb25zdCBzdHlsZXMgPSAoKSA9PiB7XG4gIHJldHVybiBzcmMoWydzcmMvc2Fzcy9zdHlsZS5zY3NzJ10pXG4gICAgLnBpcGUoZ3VscGlmKCFQUk9EVUNUSU9OLCBzb3VyY2VtYXBzLmluaXQoKSkpXG4gICAgLnBpcGUoc2FzcygpLm9uKCdlcnJvcicsIHNhc3MubG9nRXJyb3IpKVxuICAgIC5waXBlKGd1bHBpZihQUk9EVUNUSU9OLCBwb3N0Y3NzKFthdXRvcHJlZml4ZXIoKV0pKSlcbiAgICAucGlwZShndWxwaWYoUFJPRFVDVElPTiwgY2xlYW5Dc3Moe2NvbXBhdGliaWxpdHk6J2llOCd9KSkpXG4gICAgLnBpcGUoZ3VscGlmKCFQUk9EVUNUSU9OLCBzb3VyY2VtYXBzLndyaXRlKCkpKVxuICAgIC5waXBlKGRlc3QoJ2Rpc3QvY3NzJykpO1xufVxuXG5leHBvcnQgY29uc3QgaW1hZ2VzID0gKCkgPT4ge1xuICByZXR1cm4gc3JjKCdzcmMvaW1hZ2VzLyoqLyoue2pwZyxqcGVnLHBuZyxzdmcsZ2lmfScpXG4gICAgLnBpcGUoZ3VscGlmKFBST0RVQ1RJT04sIGltYWdlbWluKCkpKVxuICAgIC5waXBlKGRlc3QoJ2Rpc3QvaW1hZ2VzJykpO1xufVxuXG5leHBvcnQgY29uc3QgY29weSA9ICgpID0+IHtcbiAgcmV0dXJuIHNyYyhbJ3NyYy8qKi8qJywnIXNyYy97aW1hZ2VzLGpzLHNhc3MsdmVuZG9yLG1haWx9JywnIXNyYy97aW1hZ2VzLGpzLHNhc3MsdmVuZG9yLG1haWx9LyoqLyonXSlcbiAgICAucGlwZShkZXN0KCdkaXN0JykpO1xufVxuXG5leHBvcnQgY29uc3QgY2xlYW4gPSAoKSA9PiBkZWwoWydkaXN0J10pO1xuXG5leHBvcnQgY29uc3Qgd2F0Y2hGb3JDaGFuZ2VzID0gKCkgPT4ge1xuICB3YXRjaCgnc3JjL3Nhc3MvKiovKi5zY3NzJywgc2VyaWVzKHN0eWxlcywgcmVsb2FkKSk7XG4gIHdhdGNoKCdzcmMvaW1hZ2VzLyoqLyoue2pwZyxqcGVnLHBuZyxzdmcsZ2lmfScsIHNlcmllcyhpbWFnZXMsIHJlbG9hZCkpO1xuICB3YXRjaChbJ3NyYy8qKi8qJywnIXNyYy97aW1hZ2VzLGpzLHNhc3MsdmVuZG9yLG1haWx9JywnIXNyYy97aW1hZ2VzLGpzLHNhc3MsdmVuZG9yLG1haWx9LyoqLyonXSwgc2VyaWVzKGNvcHksIHJlbG9hZCkpO1xuICB3YXRjaCgnc3JjL2pzLyoqLyouanMnLCBzZXJpZXMoY29uY2F0X2pzLCByZWxvYWQpKTtcbiAgd2F0Y2goXCIqKi8qLnBocFwiLCByZWxvYWQpO1xufVxuXG5jb25zdCBzZXJ2ZXIgPSBicm93c2VyU3luYy5jcmVhdGUoKTtcbmV4cG9ydCBjb25zdCBzZXJ2ZSA9IGRvbmUgPT4ge1xuICBzZXJ2ZXIuaW5pdCh7XG4gICAgcHJveHk6IFwiaHR0cDovL2xvY2FsaG9zdC9fcHJvamV0b3MvZ3J1cG9sYV92MS9cIiAvLyBwdXQgeW91ciBsb2NhbCB3ZWJzaXRlIGxpbmsgaGVyZVxuICB9KTtcbiAgZG9uZSgpO1xufTtcbmV4cG9ydCBjb25zdCByZWxvYWQgPSBkb25lID0+IHtcbiAgc2VydmVyLnJlbG9hZCgpO1xuICBkb25lKCk7XG59O1xuXG5leHBvcnQgY29uc3QgZGV2ID0gc2VyaWVzKGNsZWFuLCBwYXJhbGxlbChzdHlsZXMsIGltYWdlcywgY29weSwgY29uY2F0X2pzKSwgc2VydmUsIHdhdGNoRm9yQ2hhbmdlcyk7XG5leHBvcnQgY29uc3QgYnVpbGQgPSBzZXJpZXMoY2xlYW4sIHBhcmFsbGVsKHN0eWxlcywgaW1hZ2VzLCBjb3B5LCBjb25jYXRfanMpKTtcbmV4cG9ydCBkZWZhdWx0IGRldjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "PRODUCTION",
        "yargs",
        "argv",
        "prod",
        "concat_js",
        "pipe",
        "styles",
        "sourcemaps",
        "init",
        "on",
        "sass",
        "logError",
        "compatibility",
        "write",
        "images",
        "copy",
        "clean",
        "watchForChanges",
        "reload",
        "server",
        "browserSync",
        "create",
        "serve",
        "done",
        "proxy",
        "dev",
        "build"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\_Web\\xampp\\htdocs\\_projetos\\grupola_v1\\wp-content\\themes\\grupo_la",
      "sourcesContent": [
        "import { src, dest, watch, series, parallel  } from 'gulp';\nimport yargs from 'yargs';\nimport sass from 'gulp-sass';\nimport cleanCss from 'gulp-clean-css';\nimport gulpif from 'gulp-if';\nimport postcss from 'gulp-postcss';\nimport sourcemaps from 'gulp-sourcemaps';\nimport autoprefixer from 'autoprefixer';\nimport imagemin from 'gulp-imagemin';\nimport del from 'del';\nimport webpack from 'webpack-stream';\nimport named from 'vinyl-named';\nimport browserSync from \"browser-sync\";\nimport concat from \"gulp-concat\";\n\nconst PRODUCTION = yargs.argv.prod;\n\n\nexport const concat_js = () => {\n  return src([\n        './src/js/jquery.min.js',\n        './src/js/jquery.easing.min.js',\n        './src/js/bootstrap.bundle.min.js',\n        './src/js/jqBootstrapValidation.js',\n        './src/js/contact_me.js',\n        './src/js/grupo_la.js'\n      ])\n      .pipe(concat('grupo_la.js'))\n      .pipe(dest('./dist/js'));\n}\n\nexport const styles = () => {\n  return src(['src/sass/style.scss'])\n    .pipe(gulpif(!PRODUCTION, sourcemaps.init()))\n    .pipe(sass().on('error', sass.logError))\n    .pipe(gulpif(PRODUCTION, postcss([autoprefixer()])))\n    .pipe(gulpif(PRODUCTION, cleanCss({compatibility:'ie8'})))\n    .pipe(gulpif(!PRODUCTION, sourcemaps.write()))\n    .pipe(dest('dist/css'));\n}\n\nexport const images = () => {\n  return src('src/images/**/*.{jpg,jpeg,png,svg,gif}')\n    .pipe(gulpif(PRODUCTION, imagemin()))\n    .pipe(dest('dist/images'));\n}\n\nexport const copy = () => {\n  return src(['src/**/*','!src/{images,js,sass,vendor,mail}','!src/{images,js,sass,vendor,mail}/**/*'])\n    .pipe(dest('dist'));\n}\n\nexport const clean = () => del(['dist']);\n\nexport const watchForChanges = () => {\n  watch('src/sass/**/*.scss', series(styles, reload));\n  watch('src/images/**/*.{jpg,jpeg,png,svg,gif}', series(images, reload));\n  watch(['src/**/*','!src/{images,js,sass,vendor,mail}','!src/{images,js,sass,vendor,mail}/**/*'], series(copy, reload));\n  watch('src/js/**/*.js', series(concat_js, reload));\n  watch(\"**/*.php\", reload);\n}\n\nconst server = browserSync.create();\nexport const serve = done => {\n  server.init({\n    proxy: \"http://localhost/_projetos/grupola_v1/\" // put your local website link here\n  });\n  done();\n};\nexport const reload = done => {\n  server.reload();\n  done();\n};\n\nexport const dev = series(clean, parallel(styles, images, copy, concat_js), serve, watchForChanges);\nexport const build = series(clean, parallel(styles, images, copy, concat_js));\nexport default dev;"
      ]
    },
    "sourceType": "script",
    "mtime": 1574823814000
  }
}